# ===== Dionaea minimal functional config =====

[logging]
# Log all levels and all domains to stderr and to file
default.levels = "all"
default.domains = "*"

[[logging.logger]]
name = "stderr"

[[logging.logger]]
name = "file"
path = "/opt/dionaea/var/log/dionaea.log"

# Separate error log (optional)
[[logging.logger]]
name = "file"
path = "/opt/dionaea/var/log/dionaea-errors.log"
levels = "warning,error"
domains = "*"

[paths]
# Absolute paths for logs, data, runtime
log     = "/opt/dionaea/var/log"
data    = "/opt/dionaea/var/lib"
runtime = "/opt/dionaea/var/lib"

[download]
# Enable binary download/storage
enabled = true
path = "/opt/dionaea/var/lib/binaries"

[modules]
# Core modules to load. Adjust if you did not build some (e.g., emu).
# Since libemu was disabled, do NOT include "emu".
# Modules available (check /usr/local/lib/dionaea/*.so):
modules = ["services", "logsql", "python", "curl", "pcap", "nfq"]

[services]
# List of honeypot protocols to enable. Remove any you do not have YAMLs for.
enabled = ["ftp", "http", "mssql", "smb", "mysql", "sip", "tcp", "udp"]

# Path to the YAML definitions for each service
service_configs = "/usr/local/etc/dionaea/services-enabled/*.yaml"
# If you have ihandler definitions, set:
# ihandler_configs = "/usr/local/etc/dionaea/ihandlers-enabled/*.yaml"

[logsql]
# SQLite backend
backend = "sqlite"
database = "/opt/dionaea/var/lib/dionaea.sqlite"
# Enable WAL and set busy timeout to avoid “database is locked”
options = "journal_mode=WAL,busy_timeout=10000"

# You can also adjust max open connections, etc., if needed:
# max_connections = 10
# timeout = 30

# ===== End of config =====
